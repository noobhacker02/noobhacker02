name: Update README with Projects

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:   # Allows manual running
  push:
    branches:
      - main
    paths:
      - 'scripts/update_projects.py' # Runs if you change the script

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Give the workflow permission to write to the repo
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Use the default token
      
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: üîÑ Run Update Script
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python scripts/update_projects.py
      
      # --- THIS IS THE CORRECTED STEP ---
      - name: üíæ Commit and Push with Auto-merge
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are changes
          if git diff --quiet README.md; then
            echo "‚ÑπÔ∏è No changes to commit"
            exit 0
          fi
          
          # Stage the changes
          git add README.md
          
          # Commit the changes
          git commit -m "ü§ñ Auto-update: Featured projects ($(date +'%Y-%m-%d %H:%M UTC'))"
          
          # Try to push up to 5 times with pull before each attempt
          MAX_RETRIES=5
          for i in $(seq 1 $MAX_RETRIES); do
            echo "üì§ Push attempt $i of $MAX_RETRIES..."
            
            # Try to push
            if git push origin main; then
              echo "‚úÖ Successfully pushed!"
              exit 0
            fi
            
            echo "‚ö†Ô∏è Push failed, pulling latest changes..."
            
            # Pull with rebase to apply our changes on top
            if git pull --rebase origin main; then
              echo "‚úÖ Rebase successful, retrying push..."
            else
              echo "‚ö†Ô∏è Rebase failed, using merge strategy..."
              # Abort the failed rebase and try a standard merge pull
              git rebase --abort
              git pull --no-rebase origin main
            fi
            
            # Wait a bit before retrying
            sleep 2
          done
          
          echo "‚ùå Failed to push after $MAX_RETRIES attempts"
          echo "This usually means there are conflicting changes being pushed simultaneously"
          exit 1